{"version":3,"file":"static/js/390.ac4d6adc.chunk.js","mappings":"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","sources":["sections/MOSection/stations/stationRecordedWQI.jsx","sections/MOSection/stations/stationPredictedWQI.jsx","sections/station/deleteButton.jsx","sections/station/view/stationSectionView.jsx","pages/StationSection.jsx","sections/MOSection/stations/stationActivityTable.jsx","sections/station/stationHeaderCard.jsx","../node_modules/@mui/icons-material/ArrowBackRounded.js","../node_modules/@mui/icons-material/DeleteRounded.js","../node_modules/@mui/icons-material/InfoOutlined.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Label,\r\n  CartesianGrid,\r\n  YAxis\r\n} from 'recharts';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport { Typography } from '@mui/material';\r\n\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport Popover from '@mui/material/Popover';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport default function StationRecordedWQI({ title, subheader, chart, sx, ...other }) {\r\n  const { series } = chart;\r\n\r\n  // Prepare chart data\r\n  const chartData = series.map((item) => ({ label: item.label, [title]: item.value }));\r\n\r\n  // Filter chart data to include only months with data\r\n  const filteredChartData = chartData.filter(item => item[title] !== null && item[title] !== undefined);\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handlePopoverOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <Card\r\n      spacing={3}\r\n      sx={{\r\n        px: 4,\r\n        py: 4,\r\n        borderRadius: 10,\r\n        position: 'relative',\r\n        ...sx,\r\n\r\n      }}\r\n      {...other}\r\n    >\r\n      <CardHeader\r\n        title={\r\n          <Typography\r\n            variant=\"h6\"\r\n            style={{\r\n              color: 'white',\r\n              fontFamily: \"'Arimo', sans-serif\",\r\n              fontWeight: 500,\r\n              fontSize: 26,\r\n              textTransform: 'uppercase',\r\n            }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        }\r\n        subheader={\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            style={{\r\n              color: 'white',\r\n              fontFamily: \"Archivo, 'sans-serif'\",\r\n              fontWeight: 100,\r\n              fontSize: 13,\r\n              lineHeight: 0.8,\r\n            }}\r\n          >\r\n            {subheader}\r\n          </Typography>\r\n        }\r\n      />\r\n\r\n\r\n      <div>\r\n        <IconButton\r\n          onClick={handlePopoverOpen}\r\n          aria-label=\"info\"\r\n          sx={{\r\n            color: '#8CACFF',\r\n            position: 'absolute',\r\n            top: 35,\r\n            right: 35,\r\n\r\n          }}\r\n        >\r\n          <InfoOutlinedIcon sx={{ fontSize: 31 }} />\r\n        </IconButton>\r\n        <Popover\r\n          id=\"info-popover\"\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handlePopoverClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'right',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'right',\r\n          }}\r\n          PaperProps={{\r\n            sx: {\r\n              backgroundColor: '#0d2135', // Set the background color you want\r\n              borderRadius: '1rem',\r\n              color: 'white'\r\n            },\r\n          }}\r\n        >\r\n          <Typography sx={{ p: 4, maxWidth: 250, fontFamily: \"Poppins\" }}>\r\n            When the line on the graph rises, it indicates a decline,\r\n            such as a drop in quality or performance falling short.\r\n            Conversely, when the line descends, it's a positive sign,\r\n            signaling improvement and performance meeting expectations.\r\n          </Typography>\r\n        </Popover>\r\n      </div>\r\n\r\n\r\n      <Box mt={2} sx={{ mx: 3 }}>\r\n\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          <AreaChart data={filteredChartData} width={80} height={100}>\r\n            <CartesianGrid\r\n              strokeDasharray=\"1 0\"\r\n              horizontal={true}\r\n              vertical={false}\r\n              stroke=\"rgba(100, 100, 100, 0.7)\"\r\n            />\r\n            <defs>\r\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#8CACFF\" stopOpacity={0.8} />\r\n                <stop offset=\"95%\" stopColor=\"#8CACFF\" stopOpacity={0} />\r\n              </linearGradient>\r\n            </defs>\r\n            <YAxis\r\n              tick={{ fontSize: 10, fontFamily: \"Poppins\", fill: '#ffff', fontWeight: '300' }}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              width={30}\r\n            />\r\n            <XAxis\r\n              dataKey=\"label\"\r\n              tick={{ fontSize: 10, fontFamily: \"Poppins\", fill: '#ffff', fontWeight: '300' }}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval={0}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: 'transparent' }}\r\n              contentStyle={{\r\n                backgroundColor: 'rgba(13, 33, 53, 0.32)',\r\n                boxShadow: '0 4px 30px rgba(0, 0, 0, 0.1)',\r\n                backdropFilter: 'blur(15px)',\r\n                WebkitBackdropFilter: 'blur(15px)',\r\n                color: 'white',\r\n                fontSize: 13,\r\n                fontFamily: \"Poppins\",\r\n                borderRadius: '0.5rem',\r\n                border: 'none',\r\n              }}\r\n              formatter={(value, name, props) => {\r\n                let additionalText = '';\r\n\r\n                // Add additional text based on the value of the data point\r\n                if (value >= 51) {\r\n                  additionalText = 'The quality of the water is less desirable';\r\n                } else if (value >= 31) {\r\n                  additionalText = 'Water quality is good but needs minor precaution';\r\n                } else if (value >= 0 && value <= 30) {\r\n                  additionalText = 'The physicochemical properties of water is good';\r\n                }\r\n\r\n                return (\r\n                  <div>\r\n                    {additionalText && <div style={{ marginTop: '4px', fontSize: '1rem' }}>{additionalText}</div>}\r\n                  </div>\r\n                );\r\n              }}\r\n            />\r\n\r\n            <Area\r\n              type=\"monotone\"\r\n              dataKey={title}\r\n              stroke=\"#8CACFF\"\r\n              fill=\"url(#colorUv)\"\r\n              strokeWidth={4}\r\n              dot={false}\r\n              activeDot={{ r: 6 }}\r\n            />\r\n            <Label value=\"2024\" position=\"top\" offset={5} />\r\n          </AreaChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nStationRecordedWQI.propTypes = {\r\n  chart: PropTypes.object,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n  Label,\r\n  Cell,\r\n  CartesianGrid,\r\n  YAxis,\r\n} from 'recharts';\r\nimport '../../../components/styles/WQIStyle.css';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport { Typography, Dialog, DialogContent } from '@mui/material';\r\n\r\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nexport default function StationPredictedWQI({ title, subheader, chart, sx, ...other }) {\r\n  const { series } = chart;\r\n\r\n  // Function to determine bar fill color based on value ranges\r\n  const getBarColor = (value) => {\r\n    if (value >= 0 && value <= 25) return '#A1E6A6'; // Green\r\n    if (value > 25 && value <= 50) return '#FFFF80'; // Faded Green\r\n    if (value > 50 && value <= 75) return '#EEFF51'; // Almost Yellow\r\n    if (value > 75 && value <= 100) return '#F5B748'; // Almost Orange\r\n    if (value > 100 && value <= 150) return '#FF6551'; // Red\r\n    return '#8CACFF'; // Default color\r\n  };\r\n\r\n  const legendData = [\r\n    { label: 'Excellent', color: '#A1E6A6' },\r\n    { label: 'Good', color: '#FFFF80' },\r\n    { label: 'Fair', color: '#EEFF51' },\r\n    { label: 'Poor', color: '#F5B748' },\r\n    { label: 'Very Poor', color: '#FF6551' },\r\n  ];\r\n\r\n  const chartData = series.map((item) => ({ label: item.label, [title]: item.value }));\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const handleDialogOpen = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      spacing={3}\r\n      sx={{\r\n        px: 4,\r\n        py: 4,\r\n        borderRadius: 10,\r\n        position: 'relative',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <CardHeader\r\n        title={\r\n          <Typography\r\n            variant=\"h6\"\r\n            style={{\r\n              color: 'white',\r\n              fontFamily: \"'Arimo', sans-serif\",\r\n              fontWeight: 500,\r\n              fontSize: 26,\r\n              textTransform: 'uppercase',\r\n            }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n        }\r\n        subheader={\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            style={{\r\n              color: 'white',\r\n              fontFamily: \"'Raleway', sans-serif\",\r\n              fontWeight: 400,\r\n              fontSize: 13,\r\n              lineHeight: 0.8,\r\n            }}\r\n          >\r\n            {subheader}\r\n          </Typography>\r\n        }\r\n      />\r\n\r\n      <div>\r\n        <IconButton\r\n          onClick={handleDialogOpen}\r\n          aria-label=\"info\"\r\n          sx={{\r\n            color: '#8CACFF',\r\n            position: 'absolute',\r\n            top: 35,\r\n            right: 35,\r\n          }}\r\n        >\r\n          <InfoOutlinedIcon sx={{ fontSize: 31 }} />\r\n        </IconButton>\r\n        <Dialog open={openDialog} onClose={handleDialogClose} maxWidth=\"sm\" fullWidth \r\n        PaperProps={{\r\n        sx: {\r\n          backgroundColor: 'transparent',\r\n          boxShadow: 'none',\r\n          borderRadius: '1rem',\r\n          color: 'white',\r\n          padding: '2rem',\r\n        },\r\n      }}>\r\n          <DialogContent\r\n            sx={{\r\n              backgroundColor: '#0d2135',\r\n              borderRadius: '1rem',\r\n              color: 'white',\r\n              padding: '2rem',\r\n            }}\r\n          >\r\n            <div className='Qi-container'>\r\n            <Typography\r\n              variant=\"body1\"\r\n              sx={{\r\n                fontFamily: \"Poppins\",\r\n                marginBottom: '1rem',\r\n                fontSize: '1rem',\r\n                textAlign: 'justify'\r\n              }}\r\n            >\r\n              The bar chart employs different colors to indicate distinct levels of water\r\n              classification based on quality. As the size of the chart increases, it reflects\r\n              a diminishing appeal of the water concerning its physicochemical properties.\r\n            </Typography>\r\n            \r\n            <Typography variant=\"h4\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', textAlign: 'center', color: '#8CACFF'}}>\r\n              Classification of Water Level:\r\n            </Typography>\r\n            \r\n            <div className='class-holder'>\r\n            <div className=\"interpretation-holder\">\r\n              <div className='point-holder'>\r\n                <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', color: '#A1E6A6' }}>\r\n                  0-25\r\n                </Typography>\r\n              </div>\r\n              <div className='interpretation'>\r\n                <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700' , color: '#A1E6A6'}}>Excellent\r\n                <Typography variant=\"body1\" sx={{ fontFamily: \"Poppins\", fontWeight: '400' }}>Clean water, excellently suitable for drinking</Typography>\r\n                </Typography>\r\n              </div>\r\n           </div>\r\n\r\n\r\n              <div className=\"interpretation-holder\">\r\n              <div className='point-holder'>\r\n                <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', color: '#FFFF80' }}>\r\n                  26-50\r\n                </Typography>\r\n              </div>\r\n              <div className='interpretation'>\r\n              <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', color: '#FFFF80' }}>Good\r\n                <Typography variant=\"body1\" sx={{ fontFamily: \"Poppins\", fontWeight: '400' }}>Suitable for drinking</Typography>\r\n                </Typography>\r\n              </div>\r\n           </div>\r\n\r\n           <div className=\"interpretation-holder\">\r\n              <div className='point-holder'>\r\n                <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', color: '#EEFF51' }}>\r\n                  51-75\r\n                </Typography>\r\n              </div>\r\n              <div className='interpretation'>\r\n              <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', color: '#EEFF51'}}>Fair\r\n                <Typography variant=\"body1\" sx={{ fontFamily: \"Poppins\", fontWeight: '400' }}>Modestly suitable for drinking</Typography>\r\n                </Typography>              \r\n                </div>\r\n           </div>\r\n\r\n\r\n           <div className=\"interpretation-holder\">\r\n              <div className='point-holder'>\r\n                <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', color: '#F5B748' }}>\r\n                  76-100\r\n                </Typography>\r\n              </div>\r\n              <div className='interpretation'>\r\n              <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700' , color: '#F5B748'}}>Poor\r\n                <Typography variant=\"body1\" sx={{ fontFamily: \"Poppins\", fontWeight: '400' }}>Unsuitable for drinking, minor treatment (purification) required before usage</Typography>\r\n                </Typography>                \r\n                </div>\r\n           </div>\r\n\r\n           <div className=\"interpretation-holder\">\r\n              <div className='point-holder'>\r\n                <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', color: '#FF6551' }}>\r\n                &gt; 100\r\n                </Typography>\r\n              </div>\r\n              <div className='interpretation'>\r\n              <Typography variant=\"h6\" sx={{ fontFamily: \"Poppins\", fontWeight: '700', color: '#FF6551' }}>Very Poor\r\n                <Typography variant=\"body1\" sx={{ fontFamily: \"Poppins\", fontWeight: '400' }}>Unsuitable for drinking, Appropriate treatment required before usage or seek alternative sources of supply</Typography>\r\n                </Typography>               \r\n                </div>\r\n           </div>\r\n           </div>\r\n                    </div>\r\n          </DialogContent>\r\n        </Dialog>\r\n      </div>\r\n\r\n      <Box mt={2} sx={{ mx: 3 }}>\r\n        <ResponsiveContainer width=\"100%\" height={200}>\r\n          <BarChart data={chartData} margin={{ top: 0, right: 0, left: 0, bottom: 0 }}>\r\n            <CartesianGrid\r\n              strokeDasharray=\"1 0\"\r\n              horizontal={true}\r\n              vertical={false}\r\n              stroke=\"rgba(100, 100, 100, 0.7)\"\r\n            />\r\n            <YAxis\r\n              tick={{ fontSize: 10, fontFamily: \"'Arimo', sans-serif\", fill: '#ffff', fontWeight: '300' }}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              width={30}\r\n            />\r\n            <XAxis\r\n              dataKey=\"label\"\r\n              tick={{ fontSize: 10, fontFamily: \"'Arimo', sans-serif\", fill: '#ffff', fontWeight: '300' }}\r\n              axisLine={false}\r\n              tickLine={false}\r\n              interval={0}\r\n            />\r\n            <Tooltip\r\n              cursor={{ fill: 'transparent' }}\r\n              contentStyle={{\r\n                backgroundColor: 'rgba(13, 33, 53, 0.32)',\r\n                boxShadow: '0 4px 30px rgba(0, 0, 0, 0.1)',\r\n                backdropFilter: 'blur(15px)',\r\n                WebkitBackdropFilter: 'blur(15px)',\r\n                color: 'white',\r\n                fontSize: 13,\r\n                fontFamily: \"'Archivo', sans-serif\",\r\n                borderRadius: '0.5rem',\r\n                border: 'none',\r\n              }}\r\n            />\r\n\r\n            <Bar dataKey={title} barSize={30} radius={10}>\r\n              {chartData.map((entry, index) => (\r\n                <Cell key={`cell-${index}`} fill={getBarColor(entry[title])} />\r\n              ))}\r\n            </Bar>\r\n\r\n            <Label value=\"2024\" position=\"top\" offset={5} />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </Box>\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: 2 }}>\r\n        {legendData.map((legendItem, index) => (\r\n          <Box key={`legend-${index}`} sx={{ display: 'flex', alignItems: 'center', marginRight: 2 }}>\r\n            <div\r\n              style={{\r\n                width: 10,\r\n                height: 10,\r\n                backgroundColor: legendItem.color,\r\n                marginRight: 5,\r\n                borderRadius: '2rem',\r\n              }}\r\n            />\r\n            <Typography variant=\"body2\" sx={{ color: 'white', fontFamily: \"'Archivo', sans-serif\", fontWeight: '300' }}>\r\n              {legendItem.label}\r\n            </Typography>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nStationPredictedWQI.propTypes = {\r\n  chart: PropTypes.object,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from \"@mui/material\";\r\nimport DeleteRoundedIcon from '@mui/icons-material/DeleteRounded';\r\n\r\nexport default function DeleteButton({ onClick, sx, ...other }) {\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        // Call the external onClick function if it exists\r\n        if(onClick) {\r\n            onClick();\r\n        }\r\n\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Button \r\n                aria-controls=\"simple-menu\" \r\n                aria-haspopup=\"true\" \r\n                onClick={handleClick}\r\n                sx={{\r\n                    backgroundColor: 'transparent',\r\n                    '&:hover': { \r\n                        backgroundColor: '#ff5252',\r\n                        opacity: 0.8,\r\n                        color: '#a70000',\r\n                        fontWeight: '700',\r\n                    },\r\n                    borderRadius: 5,\r\n                    color: 'white',\r\n                    width: 175, \r\n                    height: 45, \r\n                    fontSize: '0.8rem',\r\n                    fontWeight: '500',\r\n                    fontFamily: \"Poppins\",\r\n                    border: '1px solid #ff5252'\r\n                }}\r\n                startIcon={<DeleteRoundedIcon />}\r\n            >\r\n                Delete Station\r\n            </Button>\r\n                \r\n        </>\r\n    );\r\n  }\r\n\r\n  DeleteButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    sx: PropTypes.object,\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useParams, useNavigate } from 'react-router-dom';\r\nimport { Container, Grid, Box, Typography, IconButton, Stack, Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\r\nimport StationHeaderCard from '../stationHeaderCard';\r\nimport StationRecordedWQI from '../../MOSection/stations/stationRecordedWQI';\r\nimport StationPredictedWQI from '../../MOSection/stations/stationPredictedWQI';\r\nimport StationActivityTable from '../../MOSection/stations/stationActivityTable';\r\nimport ArrowBackRoundedIcon from '@mui/icons-material/ArrowBackRounded';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteButton from '../deleteButton';\r\n\r\nexport default function StationSectionView() {\r\n  const location = useLocation();\r\n  const { state: { title } } = location;\r\n  const { stationId } = useParams();\r\n  const [stationDetails, setStationDetails] = useState({\r\n    title: title || 'Default Title',\r\n    info: '',\r\n    subtitle: '',\r\n    progress: 0\r\n  });\r\n  const [wqiTrends, setWQITrends] = useState([]);\r\n  const [activityStationLogs, setActivityStationLogs] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPredictionData = async () => {\r\n      try {\r\n        const response = await fetch(`/api/realm/getWQIPredictions/${stationId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        console.log(\"Data received:\", data);\r\n        \r\n        // Assuming the response structure is consistent with your example and you're interested in the first station's data only.\r\n        const stationData = data[0]?.data; // Safely accessing the first station's data\r\n        \r\n        if (stationData) {\r\n          const chartDataFormatted = stationData.map(item => ({\r\n            // You might need to format the date as per your chart requirements\r\n            label: new Date(item.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\r\n            value: parseFloat(item.wqi.toFixed(2))\r\n          }));\r\n          \r\n          setChartData(chartDataFormatted);\r\n        } else {\r\n          console.error('No data available for this station');\r\n          setChartData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching prediction data:', error);\r\n      }\r\n    };\r\n  \r\n    fetchPredictionData();\r\n  }, [stationId]); \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n            const [activityLogsResponse, stationLogsResponse] = await Promise.all([\r\n                fetch(`/api/realm/activityLogs/${stationId}`),\r\n                fetch(`/api/realm/stationLogs/${stationId}`)\r\n            ]);\r\n\r\n            if (!activityLogsResponse.ok || !stationLogsResponse.ok) {\r\n                throw new Error('Failed to fetch logs');\r\n            }\r\n\r\n            const activityLogsData = await activityLogsResponse.json();\r\n            const stationLogsData = await stationLogsResponse.json();\r\n\r\n            // Combine activity logs and station logs\r\n            const combinedLogs = [...activityLogsData.logs, ...stationLogsData.logs];\r\n\r\n            // Sort the combined logs by date in descending order\r\n            combinedLogs.sort((a, b) => new Date(b.dateAdded) - new Date(a.dateAdded));\r\n\r\n            setActivityStationLogs(combinedLogs);\r\n        } catch (error) {\r\n            console.error('Error fetching logs:', error);\r\n        }\r\n    };\r\n\r\n    fetchData();\r\n}, [stationId]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchStationData = async () => {\r\n      try {\r\n        const response = await fetch(`/api/realm/calculateWQI`);\r\n        if (!response.ok) throw new Error('Failed to fetch station data');\r\n        const data = await response.json();\r\n        if (data[stationId]) {\r\n          const allMonths = Array.from({ length: 12 }, (_, index) => {\r\n            const month = index + 1;\r\n            return {\r\n              label: new Date(Date.UTC(2024, month - 1)).toLocaleDateString('en-US', { month: 'short' }),\r\n              value: null\r\n            };\r\n          });\r\n          const presentMonthsData = Object.entries(data[stationId]).map(([date, entry]) => {\r\n            const monthIndex = new Date(date).getMonth();\r\n            return {\r\n              label: new Date(date).toLocaleDateString('en-US', { month: 'short' }),\r\n              value: parseFloat(entry.wqi.toFixed(2))\r\n            };\r\n          });\r\n          const mergedData = allMonths.map(month => {\r\n            const existingMonthData = presentMonthsData.find(data => data.label === month.label);\r\n            return existingMonthData ? existingMonthData : month;\r\n          });\r\n          setWQITrends(mergedData);\r\n          // Assuming you still want to calculate and update station details based on the latest entry\r\n          const latestEntry = Object.values(data[stationId]).pop();\r\n          const percentageChange = ((latestEntry.wqi - data[stationId][Object.keys(data[stationId])[0]].wqi) / data[stationId][Object.keys(data[stationId])[0]].wqi) * 100;\r\n          const changeType = percentageChange > 0 ? 'increased' : 'decreased';\r\n          setStationDetails({\r\n            ...stationDetails,\r\n            info: latestEntry.status,\r\n            subtitle: ` ${stationId} is interpreted as ${latestEntry.status} with a WQI result ${latestEntry.wqi.toFixed(2)} ${changeType} by ${Math.abs(percentageChange).toFixed(2)}% since ${new Date(latestEntry.date).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}`,\r\n            progress: parseFloat(latestEntry.wqi.toFixed(2))\r\n          });\r\n        } else {\r\n          console.error('Station data not found');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching station data:', error);\r\n      }\r\n    };\r\n\r\n    fetchStationData();\r\n  }, [stationId]); // Fetch data whenever stationId changes\r\n\r\n  \r\n  const handleDelete = async () => {\r\n    handleClose(); // Close the confirmation dialog\r\n\r\n    try {\r\n      const response = await fetch(`/deleteStation/${encodeURIComponent(stationId)}`, {\r\n        method: 'POST', // Assuming the delete operation is performed via a POST request\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Failed to delete the station');\r\n      }\r\n\r\n      // If delete is successful, redirect to a certain route\r\n      navigate(\"/stations\");\r\n    } catch (error) {\r\n      console.error('Error deleting station:', error);\r\n      \r\n    }\r\n  };\r\n    \r\n      return (\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={4} mt={4}>\r\n\r\n          <Grid item xs={12} sm={12} md={12} mb={-3} ml={1}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', marginLeft: '-8px' }}>\r\n              <IconButton\r\n                  component={Link}\r\n                  to=\"/stations\"\r\n                  sx={{\r\n                    borderRadius: 3,\r\n                    borderRadius: 30, // Rounded border\r\n                                      padding: '10px 20px', // Adjust padding as needed\r\n                                      backgroundColor: 'transparent', // Transparent background\r\n                                      border: '2px solid #1976d2', // Blue outline\r\n                                      color: '#1976d2', // Blue text color\r\n                                      fontWeight: 'bold', // Bold text\r\n                                      textTransform: 'uppercase', // Uppercase text\r\n                    marginBottom: '0.5rem'\r\n                  }}\r\n                >\r\n                  <ArrowBackRoundedIcon sx={{ fontSize: 25, color: '#1976d2' }} />\r\n                <Typography sx={{\r\n                  marginLeft: '8px',\r\n                  fontFamily: \"Poppins\",\r\n                  fontWeight: '700',\r\n                  fontSize: 18,\r\n                 \r\n                }}>\r\n                  Back\r\n                </Typography>\r\n             </IconButton>\r\n            </Box>\r\n          </Grid>\r\n    \r\n          <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                    <StationHeaderCard\r\n                        title={stationDetails.info}\r\n                        info={stationDetails.title}\r\n                        subtitle={stationDetails.subtitle}\r\n                        progress={stationDetails.progress}\r\n                        \r\n                    />\r\n                </Grid>\r\n\r\n    \r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n              {chartData.length > 0 ? (\r\n                  <StationRecordedWQI\r\n                    title=\"WQI TRENDS OVER THE MONTH\"\r\n                    subheader=\"(+43%) status quality than last month\" \r\n                      chart={{\r\n                        series: wqiTrends,\r\n                      }}\r\n                    sx={{\r\n                      backgroundColor: '#10273d'\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <Grid item xs={12} sm={12} md={12} mt={10} mb={5} height={150}>\r\n                    <Typography variant=\"h6\" \r\n                                color=\"textSecondary\" \r\n                                align=\"center\"\r\n                                sx={{ fontFamily: 'Poppins',\r\n                                      fontWeight: '200',\r\n                                      color: '#8cacff',\r\n                                      opacity: '75%' }}>\r\n                        No recorded data at the moment.\r\n                    </Typography>\r\n                </Grid>\r\n                )}\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n              {chartData.length > 0 ? (\r\n                  <StationPredictedWQI\r\n                    title=\"PREDICTED WQI\"\r\n                    subheader=\"for the next month\" \r\n                    chart={{\r\n                      series: chartData,\r\n                    }}\r\n                    sx={{\r\n                      backgroundColor: '#10273d'\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <Grid item xs={12} sm={12} md={12} mt={10} mb={5} height={150}>\r\n                    <Typography variant=\"h6\" \r\n                                color=\"textSecondary\" \r\n                                align=\"center\"\r\n                                sx={{ fontFamily: 'Poppins',\r\n                                      fontWeight: '200',\r\n                                      color: '#8cacff',\r\n                                      opacity: '75%' }}>\r\n                        Prediction is not yet available.\r\n                    </Typography>\r\n                </Grid>\r\n                )}\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} md={12} lg={12} mt={2}\r\n                style={{ display:'flex', flexDirection: 'column' }}>\r\n                        <span style={{ color: 'white', \r\n                                        fontFamily: \"'Arimo', sans-serif\", \r\n                                        fontWeight: 500,\r\n                                        fontSize: 25, \r\n                                        textTransform: 'uppercase',\r\n                                        marginLeft: 8\r\n                              }}\r\n                          >\r\n                            Latest Station Activity\r\n                        </span>\r\n                        <span style={{ color: '#8CACFF', \r\n                                        fontFamily: \"Poppins\", \r\n                                        fontWeight: 300,\r\n                                        fontSize: 13, \r\n                                        marginLeft: 8\r\n                            }}\r\n                          >\r\n                            Review the recent station activities that have taken place\r\n                        </span>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                    <StationActivityTable\r\n                        sx={{\r\n                        backgroundColor: '#0d2135',\r\n                        boxShadow: 'none',\r\n                        margin: 0,\r\n                        padding: 0,\r\n                        maxHeight: '300px', \r\n                        overflowY: 'hidden', // Initially hide the scrollbar\r\n                          '&:hover': {\r\n                            overflowY: 'auto', // Show scrollbar on hover\r\n                          },\r\n                      }}\r\n                        list={activityStationLogs.map(log => ({\r\n                            id: log._id,\r\n                            tester: log.tester,\r\n                            dateAdded: log.dateAdded,\r\n                            status: log.status,\r\n                        }))}                    \r\n                    />\r\n                </Grid>\r\n\r\n                <Grid container mt={8} spacing={4} mb={2}>\r\n                    <Grid item xs={12} ml={5}>\r\n                        <Stack\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"flex-start\"\r\n                        spacing={2}\r\n                        >\r\n                          <DeleteButton onClick={handleClickOpen} />\r\n                        </Stack>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Dialog open={open} \r\n                        onClose={handleClose}\r\n                        aria-labelledby=\"confirmation-dialog-title\"\r\n                        aria-describedby=\"confirmation-dialog-description\"\r\n                        PaperProps={{\r\n                            style: {\r\n                                borderRadius: 20 // Adjust the border radius as needed\r\n                            }\r\n                        }}\r\n                    >\r\n                  <DialogTitle style={{fontFamily: 'Poppins', fontWeight: '700'}}>Delete Station</DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText style={{fontFamily: 'Poppins', fontWeight: '500'}} >\r\n                      Are you sure you want to delete this station?\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n                  <DialogActions style={{justifyContent: 'space-between'}}>\r\n                    <Button \r\n                        onClick={handleClose}\r\n                        style={{\r\n                          borderTopLeftRadius: 0,\r\n                          borderBottomLeftRadius: 20,\r\n                          background: '#C16262', // Red color for No\r\n                          color: 'white', // Text color\r\n                          flexGrow: 1\r\n                      }}\r\n                      >\r\n                        No\r\n                      </Button>\r\n                    <Button \r\n                        onClick={handleDelete} \r\n                        style={{\r\n                            borderTopRightRadius: 0,\r\n                            borderBottomRightRadius: 20,\r\n                            background: '#a4c2aa', // Green color for Yes\r\n                            color: 'white', // Text color\r\n                            flexGrow: 1\r\n                        }}\r\n                        autoFocus\r\n                    >\r\n                      Yes\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n    \r\n          </Grid>\r\n        </Container>\r\n      );\r\n    }\r\n\r\n","import React from 'react'\r\nimport StationSectionView from '../sections/station/view/stationSectionView'\r\n\r\nexport default function StationSection() {\r\n  return (\r\n    <div className='station-section-view'>\r\n      \r\n      <StationSectionView />\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Table, TableHead, TableBody, TableRow, TableCell, Paper } from '@mui/material';\r\nimport { fDateTime } from '../../../utils/formatTme'; // Adjust the path according to your project structure\r\n\r\nexport default function StationActivityTable({ title, subheader, list, sx, ...other }) {\r\n  return (\r\n    <Card spacing={3} sx={{ px: 4, py: 4, overflowX: 'auto', ...sx }} {...other}>\r\n      <Paper sx={{ borderRadius: '15px', overflow: 'hidden', backgroundColor: 'transparent', boxShadow: 'none' }}>\r\n        <Table>\r\n          <TableHead style={{ backgroundColor: '#001227', color: 'white', fontWeight: 600 }}>\r\n            <TableRow>\r\n              <TableCell align=\"center\" sx={{ color: '#8cacff', fontWeight: 600, fontFamily: 'Poppins', borderBottom: 'none' }}>Tester</TableCell>\r\n              <TableCell align=\"center\" sx={{ color: '#8cacff', fontWeight: 600, fontFamily: 'Poppins', borderBottom: 'none' }}>Date</TableCell>\r\n              <TableCell align=\"center\" sx={{ color: '#8cacff', fontWeight: 600, fontFamily: 'Poppins', borderBottom: 'none' }}>Status</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {list.map((item, index) => (\r\n              <TableRow key={item.id || index}>\r\n                <TableCell align=\"center\" sx={{ borderBottom: '1px solid #03324e', color: '#8cacff', fontFamily: 'Poppins', fontWeight: '700' }}>{item.tester}</TableCell>\r\n                <TableCell align=\"center\" sx={{ borderBottom: '1px solid #03324e', color: '#8cacff', fontFamily: 'Poppins' }}>{fDateTime(item.dateAdded)}</TableCell>\r\n                <TableCell align=\"center\" sx={{ borderBottom: '1px solid #03324e', color: '#8cacff', fontFamily: 'Poppins' }}>\r\n                  <span\r\n                    style={{\r\n                      backgroundColor: getStatusBackgroundColor(item.status),\r\n                      color: getStatusFontColor(item.status),\r\n                      padding: '0.5rem',\r\n                      fontWeight: '700',\r\n                      borderRadius: '3rem',\r\n                      fontFamily: 'Poppins'\r\n                    }}\r\n                  >\r\n                    {item.status}\r\n                  </span>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </Card>\r\n  );\r\n}\r\n\r\nStationActivityTable.propTypes = {\r\n  list: PropTypes.array,\r\n  subheader: PropTypes.string,\r\n  title: PropTypes.string,\r\n  sx: PropTypes.object,\r\n};\r\n\r\nfunction getStatusBackgroundColor(status) {\r\n  switch (status) {\r\n    case 'Added':\r\n      return '#74a7f7';\r\n    case 'Monitored':\r\n      return '#ffff80';\r\n    case 'Recently Monitored':\r\n      return '#a1e6a6';\r\n    default:\r\n      return 'transparent';\r\n  }\r\n}\r\n\r\nfunction getStatusFontColor(status) {\r\n  switch (status) {\r\n    case 'Added':\r\n      return '#093887';\r\n    case 'Monitored':\r\n      return '#616106';\r\n    case 'Recently Monitored':\r\n      return '#043608';\r\n    default:\r\n      return 'black';\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid, Stack, Typography, Box, CircularProgress } from '@mui/material';\r\n\r\nexport default function StationHeaderCard({ title, info, subtitle, progress, color = 'primary', sx, ...other }) {\r\n  const renderProgress = (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      md={4}\r\n      sx={{\r\n        bgcolor: '#03182f',\r\n        borderRadius: { xs: '45px 45px 0 0', md: '45px 0 0 45px' },\r\n        p: 5,\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          position: 'relative',\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={progress}\r\n          size={200}\r\n          thickness={5} // Adjust the thickness as needed\r\n          sx={{\r\n            width: '100%',\r\n            height: '100%',\r\n            borderRadius: '80%',\r\n            position: 'relative',\r\n            color: '#8cacff',\r\n            zIndex: 2,\r\n          }}\r\n        />\r\n        <CircularProgress\r\n          variant=\"determinate\"\r\n          value={100}\r\n          size={200}\r\n          thickness={5} // Adjust the thickness as needed\r\n          sx={{\r\n            color: 'rgba(255, 255, 255, 0.1)', // Adjust the color of the track as needed\r\n            borderRadius: '50%',\r\n            position: 'absolute',\r\n            zIndex: 1,\r\n          }}\r\n        />\r\n        {/* Display the value at the center */}\r\n        <Typography\r\n          variant=\"h4\"\r\n          sx={{\r\n            fontSize: 24,\r\n            fontFamily: \"Archivo, 'sans-serif'\",\r\n            fontWeight: '700',\r\n            color: '#8CACFF',\r\n            position: 'absolute',\r\n            zIndex: 3,\r\n          }}\r\n        >\r\n          {progress}%\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{\r\n              fontSize: 13,\r\n              fontFamily: \"Poppins\",\r\n              fontWeight: '300',\r\n              color: 'white',\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            WQI\r\n          </Typography>\r\n        </Typography>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n\r\n  const renderDetails = (\r\n    <Grid\r\n      item\r\n      xs={12}\r\n      md={8}\r\n      sx={{\r\n        bgcolor: '#001227',\r\n        borderRadius: { xs: '0 0 45px 45px', md: '0 45px 45px 0' },\r\n        p: 5,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n      }}\r\n    >\r\n      <Box sx={{ maxWidth: '400px', width: '100%' }}>\r\n        {/* Content of renderDetails */}\r\n        <Stack spacing={2}>\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{\r\n              fontSize: 15,\r\n              fontFamily: \"Archivo, 'sans-serif'\",\r\n              fontWeight: '600',\r\n              color: '#1a56bb',\r\n              textTransform: 'uppercase',\r\n              backgroundColor: '#051e68',\r\n              width: '100%', // Adjusted width\r\n              height: '2.5rem',\r\n              display: 'flex',\r\n              borderRadius: '2rem',\r\n              textAlign: 'center',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              marginTop: '2rem',\r\n            }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"h4\"\r\n            sx={{\r\n              fontSize: 55,\r\n              fontFamily: \"Poppins\",\r\n              fontWeight: '700',\r\n              color: '#8CACFF',\r\n              textTransform: 'uppercase',\r\n              marginTop: '1rem',\r\n            }}\r\n          >\r\n            {info}\r\n          </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            sx={{\r\n              fontSize: 13,\r\n              fontFamily: \"Archivo, 'sans-serif'\",\r\n              fontWeight: '300',\r\n              color: 'white',\r\n            }}\r\n          >\r\n            {subtitle}\r\n          </Typography>\r\n        </Stack>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      sx={{\r\n        backgroundColor: 'transparent',\r\n        boxShadow: 'none',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      {renderProgress}\r\n      {renderDetails}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nStationHeaderCard.propTypes = {\r\n  color: PropTypes.string,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string.isRequired,\r\n  info: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  progress: PropTypes.number.isRequired, // Progress value for the CircularProgress\r\n};\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 11H7.83l4.88-4.88c.39-.39.39-1.03 0-1.42a.9959.9959 0 0 0-1.41 0l-6.59 6.59c-.39.39-.39 1.02 0 1.41l6.59 6.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L7.83 13H19c.55 0 1-.45 1-1s-.45-1-1-1z\"\n}), 'ArrowBackRounded');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z\"\n}), 'DeleteRounded');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 7h2v2h-2zm0 4h2v6h-2zm1-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'InfoOutlined');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g. '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["StationRecordedWQI","title","subheader","chart","sx","other","filteredChartData","series","map","item","label","value","filter","undefined","useState","anchorEl","setAnchorEl","open","Boolean","Card","spacing","px","py","borderRadius","position","CardHeader","Typography","variant","style","color","fontFamily","fontWeight","fontSize","textTransform","lineHeight","IconButton","onClick","event","currentTarget","top","right","InfoOutlined","Popover","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","backgroundColor","p","maxWidth","Box","mt","mx","ResponsiveContainer","width","height","AreaChart","data","CartesianGrid","strokeDasharray","stroke","x1","y1","x2","y2","offset","stopColor","stopOpacity","YAxis","tick","fill","axisLine","tickLine","XAxis","dataKey","interval","Tooltip","cursor","contentStyle","boxShadow","backdropFilter","WebkitBackdropFilter","border","formatter","name","props","additionalText","marginTop","Area","type","strokeWidth","dot","activeDot","r","Label","StationPredictedWQI","chartData","openDialog","setOpenDialog","Dialog","fullWidth","padding","DialogContent","className","marginBottom","textAlign","BarChart","margin","left","bottom","Bar","barSize","radius","entry","index","Cell","display","justifyContent","legendItem","alignItems","marginRight","DeleteButton","Button","opacity","startIcon","DeleteRounded","StationSectionView","useLocation","state","stationId","useParams","info","subtitle","progress","stationDetails","setStationDetails","wqiTrends","setWQITrends","activityStationLogs","setActivityStationLogs","setOpen","navigate","useNavigate","setChartData","useEffect","fetchPredictionData","fetch","response","ok","Error","json","console","log","stationData","chartDataFormatted","Date","date","toLocaleDateString","month","day","parseFloat","wqi","toFixed","error","fetchData","Promise","all","activityLogsResponse","stationLogsResponse","activityLogsData","stationLogsData","combinedLogs","logs","sort","a","b","dateAdded","handleClose","fetchStationData","allMonths","Array","from","length","_","UTC","presentMonthsData","Object","entries","getMonth","mergedData","existingMonthData","find","latestEntry","values","pop","percentageChange","keys","changeType","status","Math","abs","weekday","year","handleDelete","encodeURIComponent","method","headers","Container","Grid","container","xs","sm","md","mb","ml","marginLeft","component","Link","to","ArrowBackRounded","lg","align","flexDirection","maxHeight","overflowY","list","_id","tester","Stack","direction","DialogTitle","DialogContentText","DialogActions","borderTopLeftRadius","borderBottomLeftRadius","background","flexGrow","borderTopRightRadius","borderBottomRightRadius","autoFocus","StationSection","StationActivityTable","overflowX","overflow","borderBottom","fDateTime","getStatusBackgroundColor","getStatusFontColor","StationHeaderCard","renderProgress","bgcolor","size","thickness","zIndex","renderDetails","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","overridesResolver","styles","ownerState","root","capitalize","theme","_extends","transition","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","strokeDashoffset","React","inProps","ref","useThemeProps","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","PI","round","transform","_jsx","clsx","role","children","viewBox","cx","cy"],"sourceRoot":""}