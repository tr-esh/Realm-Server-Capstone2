{"version":3,"file":"static/js/638.eb0fbe50.chunk.js","mappings":"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","sources":["sections/station/stationRecoCard.jsx","sections/Guest/view/newsCard.jsx","components/elements/Newsdata.js","components/elements/Headline.js","sections/Guest/view/guestHeaderCard.jsx","sections/Guest/view/guestView.jsx","pages/GuestDashboard.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Card,\r\n  Stack,\r\n  Typography,\r\n} from '@mui/material';\r\n\r\nexport default function StationRecoCard({\r\n  suggestionImageSrc,\r\n  suggestionSubheader,\r\n  sx,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Card\r\n      spacing={3}\r\n      sx={{\r\n        px: 4,\r\n        py: 4,\r\n        borderRadius: 10,\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      <Stack direction=\"column\" alignItems=\"center\">\r\n        <img\r\n          src={suggestionImageSrc}\r\n          alt=\"Suggestion Image\"\r\n          style={{ width: '50%', marginBottom: '2rem' }} // Adjust size as needed\r\n        />\r\n        {/* Suggestion Subheader */}\r\n        <Stack direction=\"column\" alignItems=\"center\">\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            sx={{\r\n              color: '#8cacff',\r\n              fontSize: 13,\r\n              fontFamily: \"Poppins\",\r\n              fontWeight: '400',\r\n              lineHeight: 0.9,\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            {suggestionSubheader}\r\n          </Typography>\r\n        </Stack>\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n\r\nStationRecoCard.propTypes = {\r\n  suggestionImageSrc: PropTypes.string.isRequired,\r\n  suggestionSubheader: PropTypes.string.isRequired,\r\n  sx: PropTypes.object,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Stack, Typography, Link } from '@mui/material';\r\n\r\n// Function to get a random 'Abstract water' image from Unsplash\r\nconst getRandomImage = () => {\r\n  // Replace 'YOUR_UNSPLASH_ACCESS_KEY' with your actual Unsplash access key\r\n  const accessKey = '3TIZ7fotd0nPXcEnFCKNxqa6zgTfzJ-67RuDeJXMOYM';\r\n  const endpoint = `https://api.unsplash.com/photos/random?query=abstract water&orientation=landscape&client_id=${accessKey}`;\r\n\r\n  return fetch(endpoint)\r\n    .then(response => response.json())\r\n    .then(data => data.urls.regular)\r\n    .catch(error => {\r\n      console.error('Error fetching image from Unsplash:', error);\r\n      // Provide a default image URL in case of an error\r\n      return 'https://images.unsplash.com/photo-1532423622396-10a3f979251a?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D';\r\n    });\r\n};\r\n\r\nexport default function NewsCard({\r\n  title,\r\n  dateCreated,\r\n  publisher,\r\n  link,\r\n  sx,\r\n  ...other\r\n}) {\r\n  const [backgroundImage, setBackgroundImage] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    // Fetch a random 'Abstract water' image from Unsplash\r\n    getRandomImage().then(imageUrl => setBackgroundImage(imageUrl));\r\n  }, []);\r\n\r\n  return (\r\n    <Link\r\n      href={link}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      underline=\"none\"\r\n      color=\"inherit\"\r\n    >\r\n      <Card\r\n        spacing={3}\r\n        sx={{\r\n          px: 4,\r\n          py: 4,\r\n          borderRadius: 10,\r\n          backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.5)), url(${backgroundImage})`,\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n          height: '250px', // Set a fixed height for the card\r\n          transition: 'background-color 0.3s', // Add transition for smooth effect\r\n          ...sx,\r\n        }}\r\n        {...other}\r\n      >\r\n        <Stack direction=\"column\" >\r\n\r\n          {/* Additional Information */}\r\n          <Typography\r\n            variant=\"subtitle1\"\r\n            sx={{\r\n              color: 'white',\r\n              fontSize: 13,\r\n              fontFamily: \"Archivo, 'sans-serif'\",\r\n              fontWeight: '300',\r\n              lineHeight: 0.9,\r\n              margin: '1rem',\r\n            }}\r\n          >\r\n            <div style={{\r\n              marginBottom: '1rem'\r\n            }}>\r\n              {dateCreated}\r\n            </div>\r\n            <div style={{\r\n              color: 'white',\r\n              fontSize: 20,\r\n              fontFamily: \"Archivo, 'sans-serif'\",\r\n              fontWeight: '700',\r\n              textTransform: 'uppercase',\r\n              // Underline title on hover\r\n              textDecoration: 'none',\r\n              '&:hover': {\r\n                textDecoration: 'underline',\r\n              },\r\n            }}>\r\n              {title}\r\n            </div>\r\n\r\n            <div style={{\r\n              color: 'rgba(140, 172, 255, 1)',\r\n              fontFamily: 'rgba(140, 172, 255, 1)',\r\n              fontSize: 18,\r\n              marginTop: '1rem',\r\n            }}>\r\n              {publisher}\r\n            </div>\r\n\r\n          </Typography>\r\n        </Stack>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n\r\nNewsCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  dateCreated: PropTypes.string.isRequired,\r\n  publisher: PropTypes.string.isRequired,\r\n  link: PropTypes.string.isRequired,\r\n  sx: PropTypes.object,\r\n};\r\n","export default[\r\n\r\n    {\r\n        title: 'Three Main Types of Water Quality Parameters Explained',\r\n        dateCreated: 'September 20, 2021',\r\n        publisher: 'Sensorex',\r\n        link: 'https://sensorex.com/three-main-types-of-water-quality-parameters-explained/',\r\n    },\r\n    {\r\n        title: 'Water Quality: Information, Importance and Testing',\r\n        dateCreated: 'November 17, 2023',\r\n        publisher: 'Polar Iceberg Water',\r\n        link: 'https://svalbardi.com/blogs/water/quality',\r\n    },\r\n    {\r\n        title: 'What are the Five Basic Water Quality parameters in water?',\r\n        dateCreated: '',\r\n        publisher: 'NetSol Water',\r\n        link: 'https://www.france24.com/en/tv-shows/focus/20231117-the-philippines-plastic-problem-waterways-polluted-by-single-use-packaging',\r\n    },\r\n    {\r\n        title: 'Water and Sanitation Issues in the Philippines',\r\n        dateCreated: '',\r\n        publisher: 'Planet Water Foundation',\r\n        link: 'https://planet-water.org/where-we-operate/philippines/',\r\n    },\r\n    {\r\n        title: 'Drinking-water',\r\n        dateCreated: 'September 13, 2023',\r\n        publisher: 'World Health Organization',\r\n        link: 'https://www.who.int/news-room/fact-sheets/detail/drinking-water',\r\n    },\r\n    {\r\n        title: 'The Philippines plastic problem: waterways polluted by single-use packaging',\r\n        dateCreated: 'November 17, 2023',\r\n        publisher: 'Focus',\r\n        link: 'https://www.france24.com/en/tv-shows/focus/20231117-the-philippines-plastic-problem-waterways-polluted-by-single-use-packaging',\r\n    },\r\n]","export default[\r\n    {\r\n        title: 'The importance of testing water quality in Philippine communities',\r\n        dateCreated: 'August 25, 2023',\r\n        publisher: 'Aboitiz InfraCapital',\r\n        link: 'https://aboitizinfracapital.com/the-importance-of-testing-water-quality-in-philippine-communities/',\r\n    },    \r\n]","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Stack, Typography, Box, CircularProgress } from '@mui/material';\r\n\r\nexport default function GuestHeaderCard({ title, subtitle, color = 'primary', sx, ...other }) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [optimalStation, setOptimalStation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch('/api/realm/lowWQI'); // Updated endpoint\r\n        const data = await response.json();\r\n\r\n        const { maxLowWQIStation, wqiValuesOfIdentifiedStation } = data;\r\n\r\n        // Find the latest WQI value\r\n        const latestWQI = wqiValuesOfIdentifiedStation[wqiValuesOfIdentifiedStation.length - 1];\r\n\r\n        // Determine status based on value\r\n        const getStatus = (value) => {\r\n          if (value >= 0 && value <= 25) return 'Excellent';\r\n          if (value > 25 && value <= 50) return 'Good';\r\n          if (value > 50 && value <= 75) return 'Fair';\r\n          if (value > 75 && value <= 100) return 'Poor';\r\n          if (value > 100 && value <= 150) return 'Very Poor';\r\n          return 'Unknown';\r\n        };\r\n\r\n        const optimalStationData = {\r\n          stationId: maxLowWQIStation,\r\n          wqi: latestWQI,\r\n          status: getStatus(latestWQI),\r\n          color: getBarColor(latestWQI)\r\n        };\r\n\r\n        setOptimalStation(optimalStationData);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Function to get color based on value\r\n  const getBarColor = (value) => {\r\n    if (value >= 0 && value <= 25) return '#A1E6A6'; // Green\r\n    if (value > 25 && value <= 50) return '#FFFF80'; // Faded Green\r\n    if (value > 50 && value <= 75) return '#EEFF51'; // Almost Yellow\r\n    if (value > 75 && value <= 100) return '#F5B748'; // Almost Orange\r\n    if (value > 100 && value <= 150) return '#FF6551'; // Red\r\n    return '#8CACFF'; // Default color\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      component={Stack}\r\n      spacing={0}\r\n      direction=\"column\"\r\n      sx={{\r\n        px: 4,\r\n        py: 4,\r\n        borderRadius: 10,\r\n        backgroundColor: '#0d2135',\r\n        boxShadow: 'none',\r\n        ...sx,\r\n      }}\r\n      {...other}\r\n    >\r\n      {loading ? (\r\n        <CircularProgress />\r\n      ) : optimalStation ? (\r\n        <>\r\n          {/* Render Circular Progress */}\r\n          <Card sx={{ bgcolor: '#03182f', borderTopLeftRadius: 15, borderTopRightRadius: 15, borderBottomLeftRadius: 0, borderBottomRightRadius: 0, boxShadow: 'none'}}>\r\n            <Box\r\n              sx={{\r\n                position: 'relative',\r\n                width: '100%',\r\n                height: '100%',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                paddingTop: '4rem',\r\n                paddingBottom: '4rem'\r\n              }}\r\n            >\r\n              <CircularProgress\r\n                variant=\"determinate\"\r\n                value={optimalStation.wqi}\r\n                size={200}\r\n                thickness={5} // Adjust the thickness as needed\r\n                sx={{\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  borderRadius: '80%',\r\n                  position: 'relative',\r\n                  color: optimalStation.color,\r\n                  zIndex: 2,\r\n                }}\r\n              />\r\n\r\n              <CircularProgress\r\n                variant=\"determinate\"\r\n                value={100}\r\n                size={200}\r\n                thickness={5} // Adjust the thickness as needed\r\n                sx={{\r\n                  color: 'rgba(255, 255, 255, 0.1)', // Adjust the color of the track as needed\r\n                  borderRadius: '50%',\r\n                  position: 'absolute',\r\n                  zIndex: 1,\r\n                }}\r\n              />\r\n\r\n              {/* Display the value at the center */}\r\n              <Typography\r\n                variant=\"h4\"\r\n                sx={{\r\n                  fontSize: 24,\r\n                  fontFamily: \"Archivo, 'sans-serif'\",\r\n                  fontWeight: '700',\r\n                  color: optimalStation.color,\r\n                  position: 'absolute',\r\n                  zIndex: 3,\r\n                }}\r\n              >\r\n              {optimalStation.wqi.toFixed(2)}% {/* Display WQI value with two decimals */}\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  sx={{\r\n                    fontSize: 13,\r\n                    fontFamily: \"Archivo, 'sans-serif'\",\r\n                    fontWeight: '300',\r\n                    color: optimalStation.color, textAlign: 'center'\r\n                  }}\r\n                >\r\n                  WQI\r\n                </Typography>\r\n              </Typography>\r\n\r\n            </Box>\r\n          </Card>\r\n\r\n          {/* Render Station Details */}\r\n          <Card \r\n             sx={{ bgcolor: '#001227', \r\n             borderBottomLeftRadius: 15, \r\n             borderBottomRightRadius: 15,  borderTopLeftRadius: 0, borderTopRightRadius: 0,\r\n             boxShadow: 'none'\r\n             }}>\r\n            <Stack\r\n              sx={{\r\n                padding: '20px',\r\n                display: 'flex', \r\n             alignItems: 'center',\r\n             justifyContent: 'center',\r\n              }}\r\n            >\r\n              <Typography\r\n                variant=\"h4\"\r\n                sx={{\r\n                  fontSize: 13,\r\n                  fontFamily: \"Archivo, 'sans-serif'\",\r\n                  fontWeight: '700',\r\n                  color: '#1a56bb',\r\n                  textTransform: 'uppercase',\r\n                  backgroundColor: '#051e68',\r\n                  width: '14rem', \r\n                  height: '1.7rem',\r\n                  display: 'flex',\r\n                  borderRadius: '2rem',\r\n                  textAlign: 'center',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  marginTop: '2rem',\r\n                }}\r\n              >\r\n                {title}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h4\"\r\n                sx={{\r\n                  fontSize: 25,\r\n                  fontFamily: \"Poppins\",\r\n                  fontWeight: '700',\r\n                  color: optimalStation.color,\r\n                  textTransform: 'uppercase',\r\n                  marginTop: '1rem',\r\n                }}\r\n              >\r\n                {optimalStation.stationId} {/* Display optimal station name */}\r\n              </Typography>\r\n              \r\n\r\n              {/* Display optimal station information */}\r\n              <Typography\r\n                variant=\"body2\"\r\n                sx={{\r\n                  fontSize: 13,\r\n                  fontFamily: \"Poppins\",\r\n                  fontWeight: '300',\r\n                  color: 'white',\r\n                  textAlign: 'center',\r\n                  paddingTop: '2rem',\r\n                  paddingBottom: '2.5rem',\r\n                }}\r\n              >\r\n                Based on the gathered station data, the optimal water source is the <strong> {optimalStation.stationId} </strong> with a value of <strong>{optimalStation.wqi.toFixed(2)} </strong>interpreted as <strong>{optimalStation.status}.</strong>\r\n              </Typography>\r\n\r\n            </Stack>\r\n          </Card>\r\n        </>\r\n      ) : (\r\n        <Typography variant=\"body1\">No data available</Typography>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nGuestHeaderCard.propTypes = {\r\n  color: PropTypes.string,\r\n  sx: PropTypes.object,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Container, \r\n  Grid, \r\n  Typography, \r\n  Button, \r\n  Avatar,  Paper, Table, TableHead, TableCell, TableBody, TableRow} from \"@mui/material\";\r\n\r\nimport StationRecoCard from '../../station/stationRecoCard';\r\nimport NewsCard from './newsCard';\r\nimport newsInfo from '../../../components/elements/Newsdata'\r\nimport Headline from '../../../components/elements/Headline';\r\nimport GuestHeaderCard from './guestHeaderCard';\r\nimport waterConsume from '../../../img/excellent.png';\r\nimport poorWater from '../../../img/veryPoor.png';\r\nimport badWater from '../../../img/badWater.png';\r\nimport fair from '../../../img/fair.png';\r\nimport drinkWater from '../../../img/glass-of-water.png';\r\nimport monitorWater from '../../../img/monitorWater.png';\r\nimport minorPurification from '../../../img/minorPurification.png';\r\nimport waterTreatment from '../../../img/waterTreatment.png';\r\nimport professional from '../../../img/professional.png';\r\nimport Poor from '../../../img/Poor.png';\r\nimport Water from '../../../img/water.png';\r\n\r\n\r\n\r\n\r\n\r\nexport default function GuestView() {\r\n\r\n    const location = useLocation();\r\n    const { state: { title } } = location;\r\n\r\n    const stationDetails = {\r\n        title: 'Optimal Water Source',  // Use the title from the URL or a default title\r\n        info: 'Station HO2',\r\n        subtitle: 'The quality of water in terms of physicochemical is stable',\r\n    };\r\n\r\n    const statusColors = {\r\n      'Excellent': '#A1E6A6',\r\n      'Good': '#FFFF80',\r\n      'Fair': '#EEFF51',\r\n      'Poor': '#F5B748',\r\n      'Very Poor': '#FF6551',\r\n     \r\n  };\r\n\r\n  const suggestions = {\r\n    'Excellent': {\r\n        suggestionImages: [drinkWater, fair, waterConsume], // Example images for each suggestion\r\n        suggestionSubheader: [\r\n            'Suitable for drinking.',\r\n            'No further treatment or action is necessary.',\r\n            'The water is safe to consume.'\r\n        ]\r\n    },\r\n    'Good': {\r\n        suggestionImages: [drinkWater, monitorWater],\r\n        suggestionSubheader: [\r\n            'Water that is suitable for drinking.',\r\n            'Continue monitoring the water quality.',\r\n            ''\r\n        ]\r\n    },\r\n    'Fair': {\r\n        suggestionImages: [poorWater, minorPurification, Poor ],\r\n        suggestionSubheader: [\r\n            'Water in this range is modestly suitable for drinking.',\r\n            'It may not meet the highest standards of cleanliness, so it\\'s advisable to take some precautions.',\r\n            'You can consider using a water filter or purifier to further enhance the quality before consumption.'\r\n        ]\r\n    },\r\n    'Poor': {\r\n        suggestionImages: [Water, minorPurification, waterTreatment],\r\n        suggestionSubheader: [\r\n            'Water in this range is unsuitable for drinking without treatment.',\r\n            'Minor purification is required before usage.',\r\n            'It is recommended to use a water treatment method like boiling, chlorination, or filtration to eliminate any potential contaminants.'\r\n        ]\r\n    },\r\n    'Very Poor': {\r\n        suggestionImages: [poorWater, badWater, professional],\r\n        suggestionSubheader: [\r\n            'Water in this range is unsuitable for drinking without appropriate treatment.',\r\n            'It is crucial to seek alternative sources of water supply or implement a comprehensive water treatment system.',\r\n            'Consulting with water quality professionals or local authorities can help determine the best course of action.'\r\n        ]\r\n    },\r\n    'Unknown': {\r\n        suggestionImages: [], // No images for unknown status\r\n        suggestionSubheader: [\r\n            'Unknown status',\r\n            '', // Add empty strings for unused lines\r\n            '' // Add empty strings for unused lines\r\n        ]\r\n    }\r\n};\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const [stationdetail, setStationDetail] = useState('Station HO1');\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [selectedStation, setSelectedStation] = useState(null);\r\n    const [stationOptions, setStationOptions] = useState([]);\r\n    const [stations, setStations] = useState([]);\r\n    const [optimalStation, setOptimalStation] = useState(null);\r\n    const [stationSuggestions, setStationSuggestions] = useState(suggestions['Excellent']);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n      \r\n    const handleClose = (value) => {\r\n        setAnchorEl(null);\r\n        if (value) {\r\n            setStationDetail(value);\r\n        }\r\n    };\r\n\r\n\r\n    const getStatus = (value) => {\r\n        if (value >= 0 && value <= 25) return 'Excellent';\r\n        if (value > 25 && value <= 50) return 'Good';\r\n        if (value > 50 && value <= 75) return 'Fair';\r\n        if (value > 75 && value <= 100) return 'Poor';\r\n        if (value > 100) return 'Very Poor';\r\n        return value;\r\n    };\r\n\r\n    const handleClickStation = (station) => {\r\n        console.log(\"Clicked station:\", station);\r\n        setOptimalStation(station);\r\n    \r\n        // Get the status of the clicked station\r\n        const stationStatus = station.status;\r\n    \r\n        // Check if the station status exists in the suggestions object\r\n        if (suggestions.hasOwnProperty(stationStatus)) {\r\n            // Update the station suggestions based on the status\r\n            setStationSuggestions({\r\n                suggestionImages: suggestions[stationStatus].suggestionImages,\r\n                suggestionSubheader: suggestions[stationStatus].suggestionSubheader\r\n            });\r\n        } else {\r\n            // Handle the case when the status is not found in suggestions\r\n            setStationSuggestions({\r\n                suggestionImages: [], // Set empty images array\r\n                suggestionSubheader: ['Status suggestions not available'] // Provide a default message\r\n            });\r\n        }\r\n    \r\n        console.log(\"Optimal station:\", optimalStation);\r\n    };\r\n    \r\n    \r\n\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        // Fetch station data from the API\r\n        const fetchStations = async () => {\r\n            try {\r\n                const response = await fetch('/api/realm/provideStation');\r\n                if (response.ok) {\r\n                    const data = await response.json();\r\n                    console.log('Fetched stations:', data); \r\n                    setStations(data);\r\n                } else {\r\n                    console.error('Failed to fetch station data');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching station data', error);\r\n            }\r\n        };\r\n\r\n        fetchStations();\r\n    }, []); // Run the effect only once on component mount\r\n\r\n\r\n\r\n\r\n    return(\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container spacing={4} mt={1}>\r\n                <Grid item xs={12} sm={12} md={12} lg={4}>\r\n                    <GuestHeaderCard\r\n                        title={stationDetails.title}\r\n                        info={stationDetails.info}\r\n                    />\r\n                </Grid>\r\n\r\n\r\n              \r\n                <Grid item xs={12} sm={12} md={12} lg={8}>  \r\n                    <Paper sx={{ borderRadius: '15px', overflow: 'hidden', backgroundColor: 'transparent', boxShadow: 'none' }}>\r\n                        <div >\r\n                            <Table>\r\n                                <TableHead sx={{ backgroundColor: '#001227', borderBottom: 'none' }}>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"left\" sx={{ color: '#8cacff', fontWeight: 600, fontFamily: 'Poppins', borderBottom: 'none' }}>Station Image</TableCell>\r\n                                        <TableCell align=\"left\" sx={{ color: '#8cacff', fontWeight: 600, fontFamily: 'Poppins', borderBottom: 'none' }}>Station Details</TableCell>\r\n                                        <TableCell align=\"center\" sx={{ color: '#8cacff', fontWeight: 600, fontFamily: 'Poppins', borderBottom: 'none' }}>Station Status</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {stations.filter(station => station.status).map((station, index) => (\r\n                                        <TableRow key={index}>\r\n                                            <TableCell align=\"left\" sx={{ borderBottom: '1px solid #03324e' }}>\r\n                                                <Avatar alt=\"Station Image\" src={station.stationImage && station.stationImage.url} sx={{ width: 80, height: 80, borderRadius: '15px' }} />\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ borderBottom: '1px solid #03324e', color: '#8cacff', fontFamily: 'Poppins', paddingTop: '2.5rem' }}>\r\n                                                <Typography variant=\"body1\" sx={{ fontWeight: '700', color: '#8cacff',  fontFamily: 'Poppins' }}>{station.stationName}</Typography>\r\n                                                <Typography variant=\"body2\" sx={{ fontWeight: '500', fontFamily: 'Poppins' }} >{station.siteLocation}</Typography> \r\n                                                <Typography variant=\"body2\" sx={{ fontFamily: 'Poppins' , fontWeight: 300, fontSize: '0.9rem', marginBottom: '1.5rem'}} >{station.address}</Typography>\r\n                                            </TableCell>\r\n                                            <TableCell align=\"center\" sx={{ borderBottom: '1px solid #03324e' }}>\r\n                                            <Button\r\n                                                variant=\"contained\"\r\n                                                sx={{\r\n                                                    fontFamily: 'Poppins',\r\n                                                    fontWeight: 500,\r\n                                                    fontSize: '0.9rem',\r\n                                                    borderRadius: '2rem',\r\n                                                    textTransform: 'none',\r\n                                                    backgroundColor: statusColors[station.status], // Assuming status always exists now\r\n                                                    color: '#000000', // Set text color\r\n                                                    width: '7rem',\r\n                                                    height: '2rem',\r\n                                                    boxShadow: 'none'\r\n                                                }}\r\n                                                onClick={() => handleClickStation(station)} // Pass the station object to the event handler\r\n                                                >\r\n                                                {station.status}\r\n                                            </Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n\r\n                            </Table>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n              \r\n                <Grid container spacing={4} mt={5} sx={{ borderRadius: '15px', overflow: 'hidden', boxShadow: 'none' , marginLeft: 5}}>\r\n                <Grid item xs={12} sx={{ backgroundColor: '#001227', borderTopLeftRadius: '30px', borderTopRightRadius: '30px', borderBottomLeftRadius: '0', borderBottomRightRadius: '0', padding: '1rem' }}>\r\n                    <Typography variant=\"h6\" sx={{ color: '#8cacff', fontFamily: \"Poppins\", fontWeight: 700, textTransform: 'uppercase' }}>\r\n                        Recommended for you today!\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container spacing={4} \r\n                    sx={{ backgroundColor: '#03182f', \r\n                        borderBottomLeftRadius: '30px', \r\n                        borderBottomRightRadius: '30px', \r\n                        borderTopLeftRadius: '0', \r\n                        borderTopRightRadius: '0', \r\n                        padding: '1rem',  \r\n                        marginTop: '3px', \r\n                        fontFamily: 'Poppins' }}>\r\n                    {stationSuggestions.suggestionSubheader && stationSuggestions.suggestionSubheader.map((suggestion, index) => (\r\n    <Grid key={index} item xs={12} sm={4} md={4}>\r\n        <StationRecoCard\r\n            suggestionImageSrc={stationSuggestions.suggestionImages[index]} // Use corresponding image for each suggestion\r\n            sx={{\r\n                backgroundColor: 'transparent',\r\n                boxShadow: 'none'\r\n            }}\r\n            suggestionSubheader={suggestion}\r\n        />\r\n    </Grid>\r\n))}\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n           \r\n\r\n            <Grid item xs={12} sm={12} md={12} mt={6} sx={{marginLeft: 4}}>\r\n                <span style={{ color: 'white', \r\n                               fontFamily: \"Poppins\", \r\n                               fontWeight: 700,\r\n                               fontSize: 22, \r\n                               textTransform: 'uppercase',\r\n                               color: '#8cacff', \r\n\r\n                               \r\n                    }}\r\n                    >\r\n                        Gain Insights 💭\r\n                    </span>\r\n            </Grid>\r\n\r\n            <Grid container spacing={4} margin={1}>\r\n              {Headline.map((news, index) => (\r\n                <Grid key={index} item xs={12} sm={6} md={6}>\r\n                    <NewsCard key={index} {...news} sx={{ backgroundColor: '#0A1929' }} />\r\n                </Grid>\r\n               ))}\r\n               {newsInfo.map((news, index) => (\r\n                 <Grid key={index} item xs={12} sm={6} md={3}>\r\n                    <NewsCard key={index} {...news} sx={{ backgroundColor: '#0A1929' }} />\r\n                 </Grid>\r\n                ))}\r\n            </Grid>\r\n\r\n\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n","import GuestView from \"../sections/Guest/view/guestView\";\r\n\r\nexport default function GuestHomePage(){\r\n    return(\r\n        <div className=\"user-home\">\r\n            <GuestView />\r\n        </div>\r\n    )\r\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\n\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g. '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["StationRecoCard","suggestionImageSrc","suggestionSubheader","sx","other","Card","spacing","px","py","borderRadius","Stack","direction","alignItems","src","alt","style","width","marginBottom","Typography","variant","color","fontSize","fontFamily","fontWeight","lineHeight","textAlign","NewsCard","title","dateCreated","publisher","link","React","backgroundImage","setBackgroundImage","endpoint","fetch","then","response","json","data","urls","regular","catch","error","console","getRandomImage","imageUrl","Link","href","target","rel","underline","backgroundSize","backgroundPosition","height","transition","margin","textTransform","textDecoration","marginTop","GuestHeaderCard","subtitle","useState","loading","setLoading","optimalStation","setOptimalStation","useEffect","maxLowWQIStation","wqiValuesOfIdentifiedStation","latestWQI","length","optimalStationData","stationId","wqi","status","value","getStatus","getBarColor","fetchData","component","backgroundColor","boxShadow","CircularProgress","bgcolor","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Box","position","display","flexDirection","justifyContent","paddingTop","paddingBottom","size","thickness","zIndex","toFixed","padding","GuestView","useLocation","state","stationDetails","statusColors","suggestions","suggestionImages","drinkWater","fair","waterConsume","monitorWater","poorWater","minorPurification","Poor","Water","waterTreatment","badWater","professional","useNavigate","stations","setStations","stationSuggestions","setStationSuggestions","fetchStations","ok","log","Container","maxWidth","Grid","container","mt","item","xs","sm","md","lg","info","Paper","overflow","Table","TableHead","borderBottom","TableRow","TableCell","align","TableBody","filter","station","map","index","Avatar","stationImage","url","stationName","siteLocation","address","Button","onClick","stationStatus","hasOwnProperty","handleClickStation","marginLeft","suggestion","Headline","news","newsInfo","GuestHomePage","className","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","_excluded","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","theme","_extends","transitions","create","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","inProps","ref","useThemeProps","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","round","transform","_jsx","clsx","role","children","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}