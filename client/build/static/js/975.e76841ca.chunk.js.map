{"version":3,"file":"static/js/975.e76841ca.chunk.js","mappings":"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","sources":["sections/view/SignIn.jsx","hooks/useLogin.js","pages/Login.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {  Button, CssBaseline, FormControl, FormControlLabel, Switch, TextField } from '@mui/material'\r\nimport '../../components/styles/LoginStyle.css'\r\nimport { styled } from '@mui/material/styles';\r\nimport { useLogin } from '../../hooks/useLogin';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { useRole } from '../../context/RoleContext';\r\n\r\n\r\nconst CssFilledInput = styled(TextField)({\r\n  '& .MuiFilledInput-root': {\r\n    borderBottom: \"none\",\r\n    borderRadius: \"10px\",\r\n  },\r\n  '& .MuiFilledInput-input': {\r\n    paddingLeft: \"20px\",\r\n    paddingBottom: \"10px\",\r\n    paddingTop: \"30px\"\r\n  },\r\n  '& .MuiFilledInput-root:before': {\r\n    borderBottom: \"none\",\r\n  },\r\n  '& .MuiFilledInput-root:after': {\r\n    borderBottom: \"none\",\r\n  },\r\n  '& .MuiFilledInput-root:hover:not(.Mui-disabled):before': {\r\n    borderBottom: \"none\",\r\n  },\r\n});\r\n\r\nconst Android12Switch = styled(Switch)(({ theme }) => ({\r\n        \r\n  padding: 8,\r\n  '& .MuiSwitch-track': {\r\n    borderRadius: 22 / 2,\r\n    '&:before, &:after': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      width: 16,\r\n      height: 16,\r\n    },\r\n    '&:before': {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n          theme.palette.getContrastText(theme.palette.primary.main),\r\n        )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n      left: 12,\r\n    },\r\n    '&:after': {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main),\r\n      )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n      right: 12,\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    boxShadow: 'none',\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2,\r\n  },\r\n}));\r\nconst formControlLabelStyle = {\r\n  '& .MuiFormControlLabel-label':{\r\n    fontFamily: \"Archivo\",\r\n    fontSize: '1rem',\r\n    color: '#808080'\r\n},\r\n}\r\n\r\nfunction SignIn() {\r\n\r\n  const { role } = useRole();\r\n  const [roleState, setRoleState] = useState(role);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const { login, error, isLoading } = useLogin();\r\n\r\n  useEffect(() => {\r\n    const storedRole = localStorage.getItem('selectedRole');\r\n    if (storedRole) {\r\n      setRoleState(JSON.parse(storedRole));\r\n    }\r\n  }, []);\r\n  \r\n  \r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await login(roleState, username, password);\r\n  };\r\n\r\n  const [values, setValues] = React.useState({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const [checked, setChecked] = React.useState(false);\r\n\r\n  const switchHandler = (event) => {\r\n    setChecked(event.target.checked);\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className='admin-signin'>\r\n      <div className='container'>\r\n        <h2>\r\n          <span> LOGIN </span> TO MY ACCOUNT\r\n          <span>.</span>\r\n        </h2>\r\n        <p className='sub'> Don't have an account yet?\r\n          <span>\r\n            <Link\r\n              style={{\r\n                textDecoration: 'none',\r\n                color: '#8cacff',\r\n                fontWeight: '500',\r\n              }}\r\n              to={{\r\n                pathname: '/sign-up',\r\n              }}\r\n            >\r\n              SIGN UP\r\n            </Link>\r\n          </span> </p>\r\n\r\n        <form className='signup' onSubmit={handleSubmit}>\r\n          {error && <div className='error'>{error}</div>}\r\n          <FormControl fullWidth sx={{ mt: 5, fontFamily: \"Popppins\" }}>\r\n          <CssFilledInput\r\n              variant=\"filled\"\r\n              label=\"Role\"\r\n              sx={{ fontFamily: \"Poppins\", marginBottom: 1 }}\r\n              InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Poppins\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\",\r\n                 \r\n                },\r\n              }}\r\n              InputProps={{\r\n                style: {\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: \"0.9rem\",\r\n                },\r\n                readOnly: true,\r\n              }}\r\n              value={roleState} // Use roleState here instead of role\r\n              autoFocus\r\n            />\r\n\r\n            <CssFilledInput\r\n              variant=\"filled\"\r\n              label=\"Username\"\r\n              sx={{ fontFamily: \"Poppins\", marginBottom: 1 }}\r\n              InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Poppins\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n              InputProps={{\r\n                style: {\r\n                  fontFamily: \"Poppins\",\r\n                  fontSize: \"0.9rem\"\r\n                }\r\n              }}\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              autoFocus\r\n            />\r\n\r\n                  \r\n            <FormControl fullWidth>\r\n                  <CssFilledInput\r\n                    variant=\"filled\"\r\n                    InputLabelProps={{\r\n                      style: {\r\n                        fontFamily: \"Poppins\",\r\n                        paddingLeft: \"13px\",\r\n                        paddingTop: \"4px\",\r\n                        paddingBottom: \"15px\"\r\n                      }\r\n                    }}\r\n                    inputProps={{ \r\n                      style:{\r\n                        fontFamily: \"Poppins\",\r\n                        fontSize: \"0.9rem\"\r\n                      }\r\n                    }}\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type={values.showPassword ? 'text' : 'password'}\r\n                    value={`${values.password}${password}`} \r\n                    onChange={(e) =>setPassword(e.target.value)&&handleChange('password')}\r\n                    sx={{borderRadius: \"10px\"}}\r\n                    label=\"Password\"\r\n                  />\r\n              \r\n              <FormControl sx={{mt:1}}>\r\n                    <FormControlLabel \r\n                    control={<Android12Switch checked={checked} onChange={switchHandler} />}\r\n                    label=\"Show Password\"\r\n                    sx={{...formControlLabelStyle}}\r\n                    />\r\n                  </FormControl> \r\n              </FormControl>\r\n              \r\n    \r\n            <FormControl sx={{mt:4}}  >\r\n            <CssBaseline/>\r\n            <Button \r\n                disableElevation={true}\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                              sx={ { \r\n                              fontFamily: \"Poppins\",\r\n                              fontSize: '0.9rem', \r\n                              borderRadius: 4, \r\n                              height:'6ch', \r\n                              fontWeight:'500',\r\n                              hover:'#004d40',\r\n                              backgroundColor: '#8cacff', // Set the background color here\r\n                              '&:hover': {\r\n                                backgroundColor: '#0d2135', // Change hover color if needed\r\n                              },\r\n                                } } \r\n                              margin= \"normal\"\r\n                              variant=\"contained\"  \r\n                              size=\"large\"\r\n                              color=\"secondary\"\r\n                              >\r\n                              SIGN IN\r\n                </Button>\r\n            </FormControl>\r\n          </FormControl>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import { useState } from \"react\";\r\nimport { useAuthContext } from \"./useAuthContext\";\r\n\r\n\r\nexport const useLogin = () => {\r\n    const [error, setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(null)\r\n    const { dispatch } = useAuthContext()\r\n\r\n    const login = async ( role, username, password) => {\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch('/api/realm/login', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ role, username, password})\r\n        })\r\n        const json = await response.json()\r\n\r\n        if (!response.ok) {\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if (response.ok) {\r\n            localStorage.setItem('user', JSON.stringify(json))\r\n\r\n            dispatch({type: 'LOGIN', payload: json})\r\n\r\n            setIsLoading(false)\r\n            \r\n        }\r\n        \r\n    }\r\n    \r\n    return { login, isLoading, error }\r\n} ","import SignIn from \"../sections/view/SignIn\";\r\n\r\n\r\nexport default function Login() {\r\n    return (\r\n        <div className='login'>\r\n            \r\n            < SignIn />\r\n        </div>\r\n    );\r\n}"],"names":["CssFilledInput","styled","TextField","borderBottom","borderRadius","paddingLeft","paddingBottom","paddingTop","Android12Switch","Switch","theme","padding","content","position","top","transform","width","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","margin","formControlLabelStyle","fontFamily","fontSize","color","role","useRole","useState","roleState","setRoleState","username","setUsername","password","setPassword","error","setError","isLoading","setIsLoading","dispatch","useAuthContext","login","fetch","method","headers","body","JSON","stringify","response","json","ok","localStorage","setItem","type","payload","useLogin","useEffect","storedRole","getItem","parse","handleSubmit","e","preventDefault","React","showPassword","values","setValues","checked","setChecked","className","style","textDecoration","fontWeight","to","pathname","onSubmit","FormControl","fullWidth","sx","mt","variant","label","marginBottom","InputLabelProps","InputProps","readOnly","value","autoFocus","onChange","target","inputProps","id","name","prop","event","FormControlLabel","control","CssBaseline","Button","disableElevation","disabled","hover","backgroundColor","size","Login"],"sourceRoot":""}