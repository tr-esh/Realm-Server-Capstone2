{"version":3,"file":"static/js/424.524958b1.chunk.js","mappings":"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","sources":["sections/view/SignUp.jsx","hooks/useSignup.js","pages/Signup.jsx"],"sourcesContent":["import { Button, CssBaseline, FormControl, FormControlLabel, Grid, Switch, TextField, } from '@mui/material';\r\nimport React, { useState, useEffect} from 'react'\r\nimport '../../components/styles/SignupStyle.css'\r\nimport { styled } from '@mui/material/styles';\r\nimport { useSignup } from '../../hooks/useSignup';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useRole } from '../../context/RoleContext';\r\n\r\n\r\nconst CssFilledInput = styled(TextField)({\r\n  '& .MuiFilledInput-root': {\r\n    borderBottom: \"none\",\r\n    borderRadius: \"10px\",\r\n    \r\n  },\r\n  '& .MuiFilledInput-input': {\r\n    paddingLeft: \"20px\",\r\n    paddingBottom: \"10px\",\r\n    paddingTop: \"30px\",\r\n  },\r\n  '& .MuiFilledInput-root:before': {\r\n    borderBottom: \"none\",\r\n  },\r\n  '& .MuiFilledInput-root:after': {\r\n    borderBottom: \"none\",\r\n  },\r\n  '& .MuiFilledInput-root:hover:not(.Mui-disabled):before': {\r\n    borderBottom: \"none\",\r\n  },\r\n});\r\n\r\nconst Android12Switch = styled(Switch)(({ theme }) => ({\r\n        \r\n  padding: 8,\r\n  '& .MuiSwitch-track': {\r\n    borderRadius: 22 / 2,\r\n    '&:before, &:after': {\r\n      content: '\"\"',\r\n      position: 'absolute',\r\n      top: '50%',\r\n      transform: 'translateY(-50%)',\r\n      width: 16,\r\n      height: 16,\r\n    },\r\n    '&:before': {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n          theme.palette.getContrastText(theme.palette.primary.main),\r\n        )}\" d=\"M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z\"/></svg>')`,\r\n      left: 12,\r\n    },\r\n    '&:after': {\r\n      backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"16\" width=\"16\" viewBox=\"0 0 24 24\"><path fill=\"${encodeURIComponent(\r\n        theme.palette.getContrastText(theme.palette.primary.main),\r\n      )}\" d=\"M19,13H5V11H19V13Z\" /></svg>')`,\r\n      right: 12,\r\n    },\r\n  },\r\n  '& .MuiSwitch-thumb': {\r\n    boxShadow: 'none',\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2,\r\n  },\r\n}));\r\nconst formControlLabelStyle = {\r\n  '& .MuiFormControlLabel-label':{\r\n    fontFamily: \"Archivo\",\r\n    fontSize: '1rem',\r\n    color: '#808080'\r\n},\r\n}\r\n\r\nconst SignUp = () => {\r\n  const { role } = useRole();\r\n\r\n  const [firstname, setFirstName] = useState('')\r\n  const [middlename, setMiddleName] = useState('')\r\n  const [lastname, setLastName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [username, setUsername] = useState ('')\r\n  const [accesskey, setAccessKey] = useState ('')\r\n  const [password, setPassword] = useState('')\r\n  const {signup, error, isLoading} = useSignup()\r\n  const [roleState, setRoleState] = useState(role);\r\n\r\n\r\n  useEffect(() => {\r\n    const storedRole = localStorage.getItem('selectedRole');\r\n    if (storedRole) {\r\n      setRoleState(JSON.parse(storedRole));\r\n    }\r\n  }, []);\r\n  \r\n \r\n    const handleSubmit = async (e) =>{\r\n       e.preventDefault()\r\n\r\n       await signup(roleState, firstname, middlename, lastname, email, phone, username, accesskey, password)\r\n  }\r\n   \r\n  const [values, setValues] = React.useState({  \r\n       \r\n    password: '',\r\n    showPassword: false,\r\n  \r\n  });\r\n  const [checked, setChecked] = React.useState(false)\r\n\r\n  const switchHandler = (event) =>{\r\n      setChecked(event.target.checked)\r\n      setValues({\r\n        ...values,\r\n        showPassword: !values.showPassword,\r\n      });\r\n  };\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n    \r\n    \r\n \r\n  \r\n    return (\r\n        <div className='admin-signup'>\r\n          <div className='container'>\r\n            <div className='hero'>\r\n              <h1>\r\n                CREATE \r\n                  <span> NEW </span> \r\n                             ACCOUNT\r\n                  <span>.</span>\r\n              </h1>\r\n               <p className='sub-caps'> Register your credentials to start journey </p> </div>\r\n        <form className='signup' onSubmit={handleSubmit}>\r\n        {error &&  <div className='error'>{error}</div>}                                       \r\n          <FormControl sx={{ mt: 0}}>\r\n            <Grid container spacing={1}>\r\n            \r\n            <Grid item xs={12} md={12}>\r\n            <FormControl fullWidth> \r\n            <CssFilledInput \r\n               variant=\"filled\"\r\n               label=\"Role\"\r\n               sx={{fontFamily: \"Archivo\",}}\r\n               InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n               InputProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  fontSize: \"0.9rem\"\r\n                },\r\n                readOnly: true,\r\n               }}\r\n                value={roleState}\r\n                autoFocus\r\n               />\r\n           </FormControl>\r\n          </Grid>\r\n            \r\n          <Grid item xs={12} md={12}>\r\n            <FormControl fullWidth> \r\n            <CssFilledInput \r\n               variant=\"filled\"\r\n               label=\"Firstname\"\r\n               sx={{fontFamily: \"Archivo\",}}\r\n               InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n               InputProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  fontSize: \"0.9rem\"\r\n                }\r\n               }}\r\n               value={firstname}\r\n               onChange= {(e) =>setFirstName(e.target.value)}\r\n               autoFocus \r\n               />\r\n           </FormControl>\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12} md={5}>\r\n            <FormControl fullWidth> \r\n            <CssFilledInput \r\n               variant=\"filled\"\r\n               label=\"Middlename\"\r\n               sx={{fontFamily: \"Archivo\",}}\r\n               InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n               InputProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  fontSize: \"0.9rem\"\r\n                }\r\n               }}\r\n               value={middlename}\r\n               onChange= {(e) =>setMiddleName(e.target.value)}\r\n               autoFocus />\r\n           </FormControl>\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12} md={7}>\r\n            <FormControl fullWidth> \r\n            <CssFilledInput \r\n               variant=\"filled\"\r\n               label=\"Lastname\"\r\n               sx={{fontFamily: \"Archivo\",}}\r\n               InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n               InputProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  fontSize: \"0.9rem\"\r\n                }\r\n               }}\r\n               value={lastname}\r\n               onChange= {(e) =>setLastName(e.target.value)}\r\n               autoFocus />\r\n           </FormControl>\r\n          </Grid>\r\n\r\n            \r\n            <Grid item xs={12} md={7}>\r\n            <FormControl fullWidth> \r\n            <CssFilledInput \r\n               variant=\"filled\"\r\n               label=\"Email\"\r\n               name=\"email\"\r\n               autoComplete=\"email\"\r\n               sx={{fontFamily: \"Archivo\",}}\r\n               InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n               InputProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  fontSize: \"0.9rem\"\r\n                }\r\n               }}\r\n               value={email}\r\n               onChange= {(e) =>setEmail(e.target.value)}\r\n               autoFocus />\r\n           </FormControl>\r\n          </Grid>\r\n         \r\n          <Grid item xs={12} md={5}>\r\n            <FormControl fullWidth> \r\n            <CssFilledInput \r\n               variant=\"filled\"\r\n               label=\"Phone number\"\r\n               name=\"number\"\r\n               autoComplete=\"number\"\r\n               sx={{fontFamily: \"Archivo\",}}\r\n               InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n               InputProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  fontSize: \"0.9rem\"\r\n                }\r\n               }}\r\n               value={phone}\r\n               onChange= {(e) =>setPhone(e.target.value)}\r\n               autoFocus />\r\n           </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md= {5}>\r\n            <FormControl fullWidth> \r\n            <CssFilledInput \r\n               variant=\"filled\"\r\n               label=\"Username\"\r\n               name=\"username\"\r\n               autoComplete=\"name\"\r\n               sx={{fontFamily: \"Archivo\",}}\r\n               InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n               InputProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  fontSize: \"0.9rem\"\r\n                }\r\n               }}\r\n               value={username}\r\n               onChange= {(e) =>setUsername(e.target.value)}\r\n               autoFocus />\r\n           </FormControl>\r\n          </Grid>\r\n         \r\n          <Grid item xs={12} md= {7}>\r\n            <FormControl fullWidth> \r\n            <CssFilledInput \r\n               variant=\"filled\"\r\n               label=\"Access Key\"\r\n               sx={{fontFamily: \"Archivo\",}}\r\n               InputLabelProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  paddingLeft: \"13px\",\r\n                  paddingTop: \"4px\",\r\n                  paddingBottom: \"15px\"\r\n                }\r\n              }}\r\n               InputProps={{\r\n                style: {\r\n                  fontFamily: \"Archivo\",\r\n                  fontSize: \"0.9rem\"\r\n                }\r\n               }}\r\n               value={accesskey}\r\n               onChange= {(e) =>setAccessKey(e.target.value)}\r\n               autoFocus />\r\n           </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n          <FormControl fullWidth>\r\n          <CssFilledInput\r\n                variant=\"filled\"\r\n                InputLabelProps={{\r\n                  style: {\r\n                    fontFamily: \"Archivo\",\r\n                    paddingLeft: \"13px\",\r\n                    paddingTop: \"2px\",\r\n                    paddingBottom: \"15px\"\r\n                  }\r\n                }}\r\n                inputProps={{ \r\n                  style:{\r\n                    fontFamily: \"Archivo\",\r\n                    fontSize: \"0.9rem\"\r\n                  }\r\n                }}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type={values.showPassword ? 'text' : 'password'}\r\n                value={`${values.password}${password}`} \r\n                onChange={(e) =>setPassword(e.target.value)&&handleChange('password')}\r\n                sx={{borderRadius: \"10px\"}}\r\n                label=\"Password\"\r\n              /> \r\n                <FormControl sx={{mt:1}}>\r\n                <FormControlLabel \r\n                control={<Android12Switch checked={checked} onChange={switchHandler} />}\r\n                label=\"Show Password\"\r\n                sx={{...formControlLabelStyle}}\r\n                />\r\n              </FormControl> \r\n              </FormControl>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12}>\r\n                <FormControl fullWidth margin='normal' >\r\n                  <CssBaseline/>\r\n                  <Button \r\n                  disableElevation={true}\r\n                  type=\"submit\"\r\n                  disabled={isLoading}\r\n                                sx={ { \r\n                                fontFamily: \"Archivo\",\r\n                                fontSize: '0.9rem', \r\n                                borderRadius: 4, \r\n                                height:'6ch', \r\n                                fontWeight:'500',\r\n                                hover:'#004d40',\r\n                                backgroundColor: '#8cacff', // Set the background color here\r\n                                '&:hover': {\r\n                                  backgroundColor: '#0d2135', // Change hover color if needed\r\n                                },\r\n                                  } } \r\n                                margin= \"normal\"\r\n                                variant=\"contained\"  \r\n                                size=\"large\"\r\n                                color=\"secondary\"\r\n                                >\r\n                                SIGN UP \r\n                  </Button>\r\n                </FormControl>\r\n               </Grid>\r\n\r\n               <p className='sub'> Already have an account? \r\n                  <span>\r\n                  <Link\r\n                    style={{\r\n                      textDecoration: 'none',\r\n                      color: '#8cacff',\r\n                      fontWeight: '500',\r\n                    }}\r\n                    to={{\r\n                      pathname: '/login',\r\n                      state: { role: roleState }, // Pass the role as part of the location state\r\n                    }}\r\n                  >\r\n                    LOGIN HERE\r\n                  </Link>\r\n\r\n                  </span> \r\n                </p>\r\n\r\n\r\n               </Grid>\r\n          </FormControl>\r\n          </form>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default SignUp","import { useState } from \"react\";\r\nimport { useAuthContext } from \"./useAuthContext\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import useNavigate\r\n\r\nexport const useSignup = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(null);\r\n  const { dispatch } = useAuthContext();\r\n  const navigate = useNavigate(); // Use useNavigate here\r\n\r\n  const signup = async (role, firstname, middlename, lastname, email, phone, username, accesskey, password) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n\r\n    const response = await fetch('/api/realm/signup', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({role, firstname, middlename, lastname, email, phone, username, accesskey, password})\r\n    });\r\n\r\n    const json = await response.json();\r\n\r\n    if (!response.ok) {\r\n      setIsLoading(false);\r\n      setError(json.error);\r\n    }\r\n\r\n    if (response.ok) {\r\n      localStorage.setItem('user', JSON.stringify(json));\r\n      dispatch({type: 'LOGIN', payload: json});\r\n      setIsLoading(false);\r\n\r\n      // Navigate to the sign up page\r\n      navigate('/login');\r\n    }\r\n  };\r\n\r\n  return { signup, isLoading, error, navigate }; // Include navigate in the returned object\r\n};\r\n","import SignUp from \"../sections/view/SignUp\";\r\n\r\nexport default function Signup() {\r\n    return (\r\n        <div className='signup'>\r\n            \r\n            < SignUp />\r\n        </div>\r\n    );\r\n    \r\n}"],"names":["CssFilledInput","styled","TextField","borderBottom","borderRadius","paddingLeft","paddingBottom","paddingTop","Android12Switch","Switch","theme","padding","content","position","top","transform","width","height","backgroundImage","encodeURIComponent","palette","getContrastText","primary","main","left","right","boxShadow","margin","formControlLabelStyle","fontFamily","fontSize","color","role","useRole","useState","firstname","setFirstName","middlename","setMiddleName","lastname","setLastName","email","setEmail","phone","setPhone","username","setUsername","accesskey","setAccessKey","password","setPassword","error","setError","isLoading","setIsLoading","dispatch","useAuthContext","navigate","useNavigate","signup","fetch","method","headers","body","JSON","stringify","response","json","ok","localStorage","setItem","type","payload","useSignup","roleState","setRoleState","useEffect","storedRole","getItem","parse","handleSubmit","e","preventDefault","React","showPassword","values","setValues","checked","setChecked","className","onSubmit","FormControl","sx","mt","Grid","container","spacing","item","xs","md","fullWidth","variant","label","InputLabelProps","style","InputProps","readOnly","value","autoFocus","onChange","target","name","autoComplete","inputProps","id","prop","event","FormControlLabel","control","CssBaseline","Button","disableElevation","disabled","fontWeight","hover","backgroundColor","size","textDecoration","to","pathname","state","Signup"],"sourceRoot":""}